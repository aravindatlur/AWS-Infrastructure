name: java-Pipeline

on:
  push:
    branches:
      - "main"

env:
  CI: false
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    runs-on: [self-hosted, main]

    steps:
      - uses: actions/checkout@v2
        name: checkout

      - name: Init
        shell: bash
        run: |
          echo ::set-env name=BRANCH::"$(git rev-parse --abbrev-ref HEAD)" && echo $BRANCH
          echo ::set-env name=APPLICATION_NAME::$(echo "java-app") && echo $BRANCH
          echo ::set-env name=REPOSITORY_NAME::$(echo "java-app")
          echo ::set-env name=REGISTRY_ORG::$REGISTRY
          echo ::set-env name=DEPLOYMENT::$(echo "java-app")
          echo ${{ secrets.ECR_REGISTRY_NAME }} | base64 -d > ECR_REGISTRY_NAME && export ECR_REGISTRY_NAME=$(cat ECR_REGISTRY_NAME)
          echo ::set-env name=ECR_REGISTRY_NAME::$ECR_REGISTRY_NAME
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Build
        shell: bash
        run: |
          echo ${{ secrets.mvnsettings }} | base64 -d > settings.xml && PROFILE=$BRANCH
          mvn -ntp ${{ secrets.MAVEN_OPTS }} install -s settings.xml -Dspring.profiles.active=main

      - name: Package
        shell: bash
        env:
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY_NAME
          docker build --pull -t "$REGISTRY_ORG/$DEPLOYMENT:$BRANCH-${GITHUB_SHA::8}" -t "$REGISTRY_ORG/$DEPLOYMENT:$BRANCH" --build-arg JAR_FILE=target/$DEPLOYMENT-${version}.jar  .
          docker push "$REGISTRY_ORG/$DEPLOYMENT:$BRANCH" && docker push "$REGISTRY_ORG/$DEPLOYMENT:$BRANCH-${GITHUB_SHA::8}"
      - name: Deploy
        shell: bash
        run: |
          git clone git@github.com:$REGISTRY_ORG/$DEPLOYMENT:$BRANCH/ cd java-app && git checkout main && cd java-app/
          DEPLOYMENT=$REPOSITORY_NAME

          kubectl --v=4 set image deployment/$DEPLOYMENT $DEPLOYMENT=$REGISTRY_ORG/$DEPLOYMENT:$BRANCH --record -n $BRANCH
          kubectl --v=4 rollout status deployment/$DEPLOYMENT -n $BRANCH

